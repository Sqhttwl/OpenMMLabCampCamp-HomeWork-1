{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /opt/conda\nNVCC: Cuda compilation tools, release 11.6, V11.6.124\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.12.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.28.0+1b7d778", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint='open-mmlab://detectron2/resnet50_caffe')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=1,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='LoadAnnotations',\n        with_bbox=True,\n        with_mask=True,\n        poly2mask=False),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                   (1333, 768), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/train/train.json',\n        img_prefix='data/balloon/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='LoadAnnotations',\n                with_bbox=True,\n                with_mask=True,\n                poly2mask=False),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                           (1333, 768), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ],\n        classes=('balloon', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/val/val.json',\n        img_prefix='data/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/val/val.json',\n        img_prefix='data/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )))\nevaluation = dict(metric='bbox', interval=1, save_best='auto')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=100)\ncheckpoint_config = dict(interval=10)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nclasses = ('balloon', )\nwork_dir = './work_dirs/mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_balloon'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 460382314, "exp_name": "mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_balloon.py", "hook_msgs": {}}
{"mode": "val", "epoch": 1, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.0, "bbox_mAP_50": 0.0, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0, "bbox_mAP_copypaste": "0.0000 0.0000 0.0000 0.0000 0.0000 0.0000"}
{"mode": "val", "epoch": 2, "iter": 13, "lr": 0.00012, "bbox_mAP": 0.0003, "bbox_mAP_50": 0.002, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0003, "bbox_mAP_copypaste": "0.0003 0.0020 0.0000 0.0000 0.0000 0.0003"}
{"mode": "val", "epoch": 3, "iter": 13, "lr": 0.00018, "bbox_mAP": 0.0004, "bbox_mAP_50": 0.0028, "bbox_mAP_75": 0.0001, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0006, "bbox_mAP_copypaste": "0.0004 0.0028 0.0001 0.0000 0.0000 0.0006"}
{"mode": "val", "epoch": 4, "iter": 13, "lr": 0.00025, "bbox_mAP": 0.0009, "bbox_mAP_50": 0.0062, "bbox_mAP_75": 0.0, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0012, "bbox_mAP_copypaste": "0.0009 0.0062 0.0000 0.0000 0.0000 0.0012"}
{"mode": "val", "epoch": 5, "iter": 13, "lr": 0.00031, "bbox_mAP": 0.0015, "bbox_mAP_50": 0.0077, "bbox_mAP_75": 0.0002, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.002, "bbox_mAP_copypaste": "0.0015 0.0077 0.0002 0.0000 0.0000 0.0020"}
{"mode": "val", "epoch": 6, "iter": 13, "lr": 0.00037, "bbox_mAP": 0.0049, "bbox_mAP_50": 0.0245, "bbox_mAP_75": 0.0005, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0066, "bbox_mAP_copypaste": "0.0049 0.0245 0.0005 0.0000 0.0000 0.0066"}
{"mode": "val", "epoch": 7, "iter": 13, "lr": 0.00043, "bbox_mAP": 0.0416, "bbox_mAP_50": 0.15, "bbox_mAP_75": 0.014, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.054, "bbox_mAP_copypaste": "0.0416 0.1500 0.0140 0.0000 0.0000 0.0540"}
{"mode": "val", "epoch": 8, "iter": 13, "lr": 0.00049, "bbox_mAP": 0.0709, "bbox_mAP_50": 0.2032, "bbox_mAP_75": 0.0295, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0936, "bbox_mAP_copypaste": "0.0709 0.2032 0.0295 0.0000 0.0000 0.0936"}
{"mode": "val", "epoch": 9, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.0765, "bbox_mAP_50": 0.2393, "bbox_mAP_75": 0.0139, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1023, "bbox_mAP_copypaste": "0.0765 0.2393 0.0139 0.0000 0.0000 0.1023"}
{"mode": "val", "epoch": 10, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.0686, "bbox_mAP_50": 0.2137, "bbox_mAP_75": 0.0086, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0914, "bbox_mAP_copypaste": "0.0686 0.2137 0.0086 0.0000 0.0000 0.0914"}
{"mode": "val", "epoch": 11, "iter": 13, "lr": 7e-05, "bbox_mAP": 0.0818, "bbox_mAP_50": 0.2559, "bbox_mAP_75": 0.0181, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1096, "bbox_mAP_copypaste": "0.0818 0.2559 0.0181 0.0000 0.0000 0.1096"}
{"mode": "val", "epoch": 12, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0825, "bbox_mAP_50": 0.2575, "bbox_mAP_75": 0.0182, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1106, "bbox_mAP_copypaste": "0.0825 0.2575 0.0182 0.0000 0.0000 0.1106"}
{"mode": "val", "epoch": 13, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.082, "bbox_mAP_50": 0.2576, "bbox_mAP_75": 0.0181, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1099, "bbox_mAP_copypaste": "0.0820 0.2576 0.0181 0.0000 0.0000 0.1099"}
{"mode": "val", "epoch": 14, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0791, "bbox_mAP_50": 0.2433, "bbox_mAP_75": 0.0198, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1057, "bbox_mAP_copypaste": "0.0791 0.2433 0.0198 0.0000 0.0000 0.1057"}
{"mode": "val", "epoch": 15, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0797, "bbox_mAP_50": 0.2449, "bbox_mAP_75": 0.0208, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1066, "bbox_mAP_copypaste": "0.0797 0.2449 0.0208 0.0000 0.0000 0.1066"}
{"mode": "val", "epoch": 16, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0788, "bbox_mAP_50": 0.2417, "bbox_mAP_75": 0.0198, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1053, "bbox_mAP_copypaste": "0.0788 0.2417 0.0198 0.0000 0.0000 0.1053"}
{"mode": "val", "epoch": 17, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0799, "bbox_mAP_50": 0.2449, "bbox_mAP_75": 0.0203, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1069, "bbox_mAP_copypaste": "0.0799 0.2449 0.0203 0.0000 0.0000 0.1069"}
{"mode": "val", "epoch": 18, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0803, "bbox_mAP_50": 0.2455, "bbox_mAP_75": 0.0212, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1074, "bbox_mAP_copypaste": "0.0803 0.2455 0.0212 0.0000 0.0000 0.1074"}
{"mode": "val", "epoch": 19, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0832, "bbox_mAP_50": 0.2498, "bbox_mAP_75": 0.0212, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1112, "bbox_mAP_copypaste": "0.0832 0.2498 0.0212 0.0000 0.0000 0.1112"}
{"mode": "val", "epoch": 20, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.082, "bbox_mAP_50": 0.2465, "bbox_mAP_75": 0.0205, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1096, "bbox_mAP_copypaste": "0.0820 0.2465 0.0205 0.0000 0.0000 0.1096"}
{"mode": "val", "epoch": 21, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0827, "bbox_mAP_50": 0.2477, "bbox_mAP_75": 0.0217, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1106, "bbox_mAP_copypaste": "0.0827 0.2477 0.0217 0.0000 0.0000 0.1106"}
{"mode": "val", "epoch": 22, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0835, "bbox_mAP_50": 0.2492, "bbox_mAP_75": 0.0223, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1116, "bbox_mAP_copypaste": "0.0835 0.2492 0.0223 0.0000 0.0000 0.1116"}
{"mode": "val", "epoch": 23, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0836, "bbox_mAP_50": 0.2504, "bbox_mAP_75": 0.0226, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1118, "bbox_mAP_copypaste": "0.0836 0.2504 0.0226 0.0000 0.0000 0.1118"}
{"mode": "val", "epoch": 24, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0834, "bbox_mAP_50": 0.2487, "bbox_mAP_75": 0.0225, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1116, "bbox_mAP_copypaste": "0.0834 0.2487 0.0225 0.0000 0.0000 0.1116"}
{"mode": "val", "epoch": 25, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0833, "bbox_mAP_50": 0.2495, "bbox_mAP_75": 0.0225, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1115, "bbox_mAP_copypaste": "0.0833 0.2495 0.0225 0.0000 0.0000 0.1115"}
{"mode": "val", "epoch": 26, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0842, "bbox_mAP_50": 0.2529, "bbox_mAP_75": 0.0227, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1127, "bbox_mAP_copypaste": "0.0842 0.2529 0.0227 0.0000 0.0000 0.1127"}
{"mode": "val", "epoch": 27, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0847, "bbox_mAP_50": 0.2539, "bbox_mAP_75": 0.0231, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1135, "bbox_mAP_copypaste": "0.0847 0.2539 0.0231 0.0000 0.0000 0.1135"}
{"mode": "val", "epoch": 28, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0883, "bbox_mAP_50": 0.2549, "bbox_mAP_75": 0.023, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1186, "bbox_mAP_copypaste": "0.0883 0.2549 0.0230 0.0000 0.0000 0.1186"}
{"mode": "val", "epoch": 29, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0899, "bbox_mAP_50": 0.2571, "bbox_mAP_75": 0.0247, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1208, "bbox_mAP_copypaste": "0.0899 0.2571 0.0247 0.0000 0.0000 0.1208"}
{"mode": "val", "epoch": 30, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.09, "bbox_mAP_50": 0.257, "bbox_mAP_75": 0.0246, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.121, "bbox_mAP_copypaste": "0.0900 0.2570 0.0246 0.0000 0.0000 0.1210"}
{"mode": "val", "epoch": 31, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0894, "bbox_mAP_50": 0.2547, "bbox_mAP_75": 0.0246, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1202, "bbox_mAP_copypaste": "0.0894 0.2547 0.0246 0.0000 0.0000 0.1202"}
{"mode": "val", "epoch": 32, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0894, "bbox_mAP_50": 0.2557, "bbox_mAP_75": 0.0247, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1201, "bbox_mAP_copypaste": "0.0894 0.2557 0.0247 0.0000 0.0000 0.1201"}
{"mode": "val", "epoch": 33, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0895, "bbox_mAP_50": 0.2565, "bbox_mAP_75": 0.0241, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1202, "bbox_mAP_copypaste": "0.0895 0.2565 0.0241 0.0000 0.0000 0.1202"}
{"mode": "val", "epoch": 34, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.089, "bbox_mAP_50": 0.2544, "bbox_mAP_75": 0.0245, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1195, "bbox_mAP_copypaste": "0.0890 0.2544 0.0245 0.0000 0.0000 0.1195"}
{"mode": "val", "epoch": 35, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0903, "bbox_mAP_50": 0.2575, "bbox_mAP_75": 0.0249, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1215, "bbox_mAP_copypaste": "0.0903 0.2575 0.0249 0.0000 0.0000 0.1215"}
{"mode": "val", "epoch": 36, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0882, "bbox_mAP_50": 0.2534, "bbox_mAP_75": 0.0233, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1185, "bbox_mAP_copypaste": "0.0882 0.2534 0.0233 0.0000 0.0000 0.1185"}
{"mode": "val", "epoch": 37, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0881, "bbox_mAP_50": 0.2533, "bbox_mAP_75": 0.0232, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1184, "bbox_mAP_copypaste": "0.0881 0.2533 0.0232 0.0000 0.0000 0.1184"}
{"mode": "val", "epoch": 38, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0888, "bbox_mAP_50": 0.2531, "bbox_mAP_75": 0.023, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1193, "bbox_mAP_copypaste": "0.0888 0.2531 0.0230 0.0000 0.0000 0.1193"}
{"mode": "val", "epoch": 39, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.09, "bbox_mAP_50": 0.2565, "bbox_mAP_75": 0.0231, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.121, "bbox_mAP_copypaste": "0.0900 0.2565 0.0231 0.0000 0.0000 0.1210"}
{"mode": "val", "epoch": 40, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0903, "bbox_mAP_50": 0.2558, "bbox_mAP_75": 0.0237, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1217, "bbox_mAP_copypaste": "0.0903 0.2558 0.0237 0.0000 0.0000 0.1217"}
{"mode": "val", "epoch": 41, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0905, "bbox_mAP_50": 0.2697, "bbox_mAP_75": 0.0235, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1218, "bbox_mAP_copypaste": "0.0905 0.2697 0.0235 0.0000 0.0000 0.1218"}
{"mode": "val", "epoch": 42, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0906, "bbox_mAP_50": 0.2716, "bbox_mAP_75": 0.0235, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1219, "bbox_mAP_copypaste": "0.0906 0.2716 0.0235 0.0000 0.0000 0.1219"}
{"mode": "val", "epoch": 43, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0901, "bbox_mAP_50": 0.2684, "bbox_mAP_75": 0.023, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1214, "bbox_mAP_copypaste": "0.0901 0.2684 0.0230 0.0000 0.0000 0.1214"}
{"mode": "val", "epoch": 44, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0925, "bbox_mAP_50": 0.2732, "bbox_mAP_75": 0.0238, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1249, "bbox_mAP_copypaste": "0.0925 0.2732 0.0238 0.0000 0.0000 0.1249"}
{"mode": "val", "epoch": 45, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0944, "bbox_mAP_50": 0.2738, "bbox_mAP_75": 0.0236, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1276, "bbox_mAP_copypaste": "0.0944 0.2738 0.0236 0.0000 0.0000 0.1276"}
{"mode": "val", "epoch": 46, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0957, "bbox_mAP_50": 0.2775, "bbox_mAP_75": 0.0238, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1293, "bbox_mAP_copypaste": "0.0957 0.2775 0.0238 0.0000 0.0000 0.1293"}
{"mode": "val", "epoch": 47, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.094, "bbox_mAP_50": 0.2754, "bbox_mAP_75": 0.0239, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1268, "bbox_mAP_copypaste": "0.0940 0.2754 0.0239 0.0000 0.0000 0.1268"}
{"mode": "val", "epoch": 48, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0916, "bbox_mAP_50": 0.2544, "bbox_mAP_75": 0.0236, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1234, "bbox_mAP_copypaste": "0.0916 0.2544 0.0236 0.0000 0.0000 0.1234"}
{"mode": "val", "epoch": 49, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0916, "bbox_mAP_50": 0.2552, "bbox_mAP_75": 0.0238, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1234, "bbox_mAP_copypaste": "0.0916 0.2552 0.0238 0.0000 0.0000 0.1234"}
{"mode": "val", "epoch": 50, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0866, "bbox_mAP_50": 0.2519, "bbox_mAP_75": 0.0223, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1166, "bbox_mAP_copypaste": "0.0866 0.2519 0.0223 0.0000 0.0000 0.1166"}
{"mode": "val", "epoch": 51, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0772, "bbox_mAP_50": 0.2319, "bbox_mAP_75": 0.0181, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1033, "bbox_mAP_copypaste": "0.0772 0.2319 0.0181 0.0000 0.0000 0.1033"}
{"mode": "val", "epoch": 52, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0839, "bbox_mAP_50": 0.2416, "bbox_mAP_75": 0.0218, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1127, "bbox_mAP_copypaste": "0.0839 0.2416 0.0218 0.0000 0.0000 0.1127"}
{"mode": "val", "epoch": 53, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0745, "bbox_mAP_50": 0.2227, "bbox_mAP_75": 0.0178, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.0996, "bbox_mAP_copypaste": "0.0745 0.2227 0.0178 0.0000 0.0000 0.0996"}
{"mode": "val", "epoch": 54, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0753, "bbox_mAP_50": 0.2259, "bbox_mAP_75": 0.0173, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.101, "bbox_mAP_copypaste": "0.0753 0.2259 0.0173 0.0000 0.0000 0.1010"}
{"mode": "val", "epoch": 55, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0765, "bbox_mAP_50": 0.2272, "bbox_mAP_75": 0.0187, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1029, "bbox_mAP_copypaste": "0.0765 0.2272 0.0187 0.0000 0.0000 0.1029"}
{"mode": "val", "epoch": 56, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0759, "bbox_mAP_50": 0.2275, "bbox_mAP_75": 0.0174, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1019, "bbox_mAP_copypaste": "0.0759 0.2275 0.0174 0.0000 0.0000 0.1019"}
{"mode": "val", "epoch": 57, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0768, "bbox_mAP_50": 0.2262, "bbox_mAP_75": 0.019, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1034, "bbox_mAP_copypaste": "0.0768 0.2262 0.0190 0.0000 0.0000 0.1034"}
{"mode": "val", "epoch": 58, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0806, "bbox_mAP_50": 0.2308, "bbox_mAP_75": 0.0412, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1084, "bbox_mAP_copypaste": "0.0806 0.2308 0.0412 0.0000 0.0000 0.1084"}
{"mode": "val", "epoch": 59, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0806, "bbox_mAP_50": 0.2226, "bbox_mAP_75": 0.0425, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1086, "bbox_mAP_copypaste": "0.0806 0.2226 0.0425 0.0000 0.0000 0.1086"}
{"mode": "val", "epoch": 60, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0816, "bbox_mAP_50": 0.2237, "bbox_mAP_75": 0.0417, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.11, "bbox_mAP_copypaste": "0.0816 0.2237 0.0417 0.0000 0.0000 0.1100"}
{"mode": "val", "epoch": 61, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0876, "bbox_mAP_50": 0.2348, "bbox_mAP_75": 0.0423, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1179, "bbox_mAP_copypaste": "0.0876 0.2348 0.0423 0.0000 0.0000 0.1179"}
{"mode": "val", "epoch": 62, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0871, "bbox_mAP_50": 0.2348, "bbox_mAP_75": 0.0414, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1173, "bbox_mAP_copypaste": "0.0871 0.2348 0.0414 0.0000 0.0000 0.1173"}
{"mode": "val", "epoch": 63, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0875, "bbox_mAP_50": 0.2361, "bbox_mAP_75": 0.0413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1178, "bbox_mAP_copypaste": "0.0875 0.2361 0.0413 0.0000 0.0000 0.1178"}
{"mode": "val", "epoch": 64, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0888, "bbox_mAP_50": 0.2375, "bbox_mAP_75": 0.0423, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1198, "bbox_mAP_copypaste": "0.0888 0.2375 0.0423 0.0000 0.0000 0.1198"}
{"mode": "val", "epoch": 65, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0885, "bbox_mAP_50": 0.2363, "bbox_mAP_75": 0.0423, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1194, "bbox_mAP_copypaste": "0.0885 0.2363 0.0423 0.0000 0.0000 0.1194"}
{"mode": "val", "epoch": 66, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.08, "bbox_mAP_50": 0.2234, "bbox_mAP_75": 0.0313, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1081, "bbox_mAP_copypaste": "0.0800 0.2234 0.0313 0.0000 0.0000 0.1081"}
{"mode": "val", "epoch": 67, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0792, "bbox_mAP_50": 0.2215, "bbox_mAP_75": 0.031, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1092, "bbox_mAP_copypaste": "0.0792 0.2215 0.0310 0.0000 0.0000 0.1092"}
{"mode": "val", "epoch": 68, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0864, "bbox_mAP_50": 0.2295, "bbox_mAP_75": 0.0419, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1199, "bbox_mAP_copypaste": "0.0864 0.2295 0.0419 0.0000 0.0000 0.1199"}
{"mode": "val", "epoch": 69, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0867, "bbox_mAP_50": 0.2259, "bbox_mAP_75": 0.0552, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1204, "bbox_mAP_copypaste": "0.0867 0.2259 0.0552 0.0000 0.0000 0.1204"}
{"mode": "val", "epoch": 70, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0805, "bbox_mAP_50": 0.2206, "bbox_mAP_75": 0.0452, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1094, "bbox_mAP_copypaste": "0.0805 0.2206 0.0452 0.0000 0.0000 0.1094"}
{"mode": "val", "epoch": 71, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0889, "bbox_mAP_50": 0.2327, "bbox_mAP_75": 0.0571, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1209, "bbox_mAP_copypaste": "0.0889 0.2327 0.0571 0.0000 0.0000 0.1209"}
{"mode": "val", "epoch": 72, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0796, "bbox_mAP_50": 0.2165, "bbox_mAP_75": 0.0452, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1081, "bbox_mAP_copypaste": "0.0796 0.2165 0.0452 0.0000 0.0000 0.1081"}
{"mode": "val", "epoch": 73, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0784, "bbox_mAP_50": 0.2189, "bbox_mAP_75": 0.0412, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1065, "bbox_mAP_copypaste": "0.0784 0.2189 0.0412 0.0000 0.0000 0.1065"}
{"mode": "val", "epoch": 74, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0758, "bbox_mAP_50": 0.2193, "bbox_mAP_75": 0.0256, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1032, "bbox_mAP_copypaste": "0.0758 0.2193 0.0256 0.0000 0.0000 0.1032"}
{"mode": "val", "epoch": 75, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0795, "bbox_mAP_50": 0.2299, "bbox_mAP_75": 0.0412, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1081, "bbox_mAP_copypaste": "0.0795 0.2299 0.0412 0.0000 0.0000 0.1081"}
{"mode": "val", "epoch": 76, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0791, "bbox_mAP_50": 0.2359, "bbox_mAP_75": 0.0406, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1077, "bbox_mAP_copypaste": "0.0791 0.2359 0.0406 0.0000 0.0000 0.1077"}
{"mode": "val", "epoch": 77, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0774, "bbox_mAP_50": 0.221, "bbox_mAP_75": 0.0404, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1054, "bbox_mAP_copypaste": "0.0774 0.2210 0.0404 0.0000 0.0000 0.1054"}
{"mode": "val", "epoch": 78, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.08, "bbox_mAP_50": 0.2402, "bbox_mAP_75": 0.0405, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1091, "bbox_mAP_copypaste": "0.0800 0.2402 0.0405 0.0000 0.0000 0.1091"}
{"mode": "val", "epoch": 79, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0792, "bbox_mAP_50": 0.2265, "bbox_mAP_75": 0.0413, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1085, "bbox_mAP_copypaste": "0.0792 0.2265 0.0413 0.0000 0.0000 0.1085"}
{"mode": "val", "epoch": 80, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0907, "bbox_mAP_50": 0.2521, "bbox_mAP_75": 0.053, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1246, "bbox_mAP_copypaste": "0.0907 0.2521 0.0530 0.0000 0.0000 0.1246"}
{"mode": "val", "epoch": 81, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0908, "bbox_mAP_50": 0.2493, "bbox_mAP_75": 0.0543, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1246, "bbox_mAP_copypaste": "0.0908 0.2493 0.0543 0.0000 0.0000 0.1246"}
{"mode": "val", "epoch": 82, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0885, "bbox_mAP_50": 0.2474, "bbox_mAP_75": 0.0541, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1215, "bbox_mAP_copypaste": "0.0885 0.2474 0.0541 0.0000 0.0000 0.1215"}
{"mode": "val", "epoch": 83, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0806, "bbox_mAP_50": 0.2252, "bbox_mAP_75": 0.0374, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1146, "bbox_mAP_copypaste": "0.0806 0.2252 0.0374 0.0000 0.0000 0.1146"}
{"mode": "val", "epoch": 84, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0761, "bbox_mAP_50": 0.2143, "bbox_mAP_75": 0.038, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1096, "bbox_mAP_copypaste": "0.0761 0.2143 0.0380 0.0000 0.0000 0.1096"}
{"mode": "val", "epoch": 85, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0758, "bbox_mAP_50": 0.2129, "bbox_mAP_75": 0.031, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1083, "bbox_mAP_copypaste": "0.0758 0.2129 0.0310 0.0000 0.0000 0.1083"}
{"mode": "val", "epoch": 86, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0744, "bbox_mAP_50": 0.2163, "bbox_mAP_75": 0.0291, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1088, "bbox_mAP_copypaste": "0.0744 0.2163 0.0291 0.0000 0.0000 0.1088"}
{"mode": "val", "epoch": 87, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0782, "bbox_mAP_50": 0.2303, "bbox_mAP_75": 0.0284, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1157, "bbox_mAP_copypaste": "0.0782 0.2303 0.0284 0.0000 0.0000 0.1157"}
{"mode": "val", "epoch": 88, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0765, "bbox_mAP_50": 0.2205, "bbox_mAP_75": 0.0284, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1164, "bbox_mAP_copypaste": "0.0765 0.2205 0.0284 0.0000 0.0000 0.1164"}
{"mode": "val", "epoch": 89, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0766, "bbox_mAP_50": 0.2213, "bbox_mAP_75": 0.0284, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1172, "bbox_mAP_copypaste": "0.0766 0.2213 0.0284 0.0000 0.0000 0.1172"}
{"mode": "val", "epoch": 90, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0773, "bbox_mAP_50": 0.2335, "bbox_mAP_75": 0.0286, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1154, "bbox_mAP_copypaste": "0.0773 0.2335 0.0286 0.0000 0.0000 0.1154"}
{"mode": "val", "epoch": 91, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0777, "bbox_mAP_50": 0.2237, "bbox_mAP_75": 0.033, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1218, "bbox_mAP_copypaste": "0.0777 0.2237 0.0330 0.0000 0.0000 0.1218"}
{"mode": "val", "epoch": 92, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0761, "bbox_mAP_50": 0.217, "bbox_mAP_75": 0.033, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1214, "bbox_mAP_copypaste": "0.0761 0.2170 0.0330 0.0000 0.0000 0.1214"}
{"mode": "val", "epoch": 93, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0769, "bbox_mAP_50": 0.2182, "bbox_mAP_75": 0.033, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1216, "bbox_mAP_copypaste": "0.0769 0.2182 0.0330 0.0000 0.0000 0.1216"}
{"mode": "val", "epoch": 94, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0768, "bbox_mAP_50": 0.2215, "bbox_mAP_75": 0.0331, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1217, "bbox_mAP_copypaste": "0.0768 0.2215 0.0331 0.0000 0.0000 0.1217"}
{"mode": "val", "epoch": 95, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0757, "bbox_mAP_50": 0.2135, "bbox_mAP_75": 0.033, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1199, "bbox_mAP_copypaste": "0.0757 0.2135 0.0330 0.0000 0.0000 0.1199"}
{"mode": "val", "epoch": 96, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0737, "bbox_mAP_50": 0.202, "bbox_mAP_75": 0.0325, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1158, "bbox_mAP_copypaste": "0.0737 0.2020 0.0325 0.0000 0.0000 0.1158"}
{"mode": "val", "epoch": 97, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0708, "bbox_mAP_50": 0.2011, "bbox_mAP_75": 0.0316, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.115, "bbox_mAP_copypaste": "0.0708 0.2011 0.0316 0.0000 0.0000 0.1150"}
{"mode": "val", "epoch": 98, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0754, "bbox_mAP_50": 0.2111, "bbox_mAP_75": 0.0336, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.122, "bbox_mAP_copypaste": "0.0754 0.2111 0.0336 0.0000 0.0000 0.1220"}
{"mode": "val", "epoch": 99, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0724, "bbox_mAP_50": 0.2021, "bbox_mAP_75": 0.0323, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.118, "bbox_mAP_copypaste": "0.0724 0.2021 0.0323 0.0000 0.0000 0.1180"}
{"mode": "val", "epoch": 100, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.0728, "bbox_mAP_50": 0.1974, "bbox_mAP_75": 0.0333, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.1186, "bbox_mAP_copypaste": "0.0728 0.1974 0.0333 0.0000 0.0000 0.1186"}
